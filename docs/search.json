[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A constituição em processo de judicialização",
    "section": "",
    "text": "Apresentação\nEste livro apresenta a documentação da minha pesquisa de dissertação “A constituição em processo de judicialização: um estudo da multidimensionalidade da judicialização da política a partir da análise das arguições de descumprimento de preceito fundamental”, apresentada ao Programa de Pós-Graduação em Direito e Justiça Social (PPGDJS) da Universidade Federal do Rio Grande - FURG, para obtenção do título de Mestre em Direito.\nA dissertação está disponível em: XXX.\nEsse livro foi gerado pela última vez em 2025-06-20 nas seguintes condições:\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.5.1 (2025-06-13 ucrt)\n os       Windows 11 x64 (build 26100)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Portuguese_Brazil.utf8\n ctype    Portuguese_Brazil.utf8\n tz       America/Sao_Paulo\n date     2025-06-15\n pandoc   3.4 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n D cli           3.6.2   2023-12-11 [1] CRAN (R 4.3.3)\n   digest        0.6.35  2024-03-11 [1] CRAN (R 4.3.3)\n   evaluate      0.23    2023-11-01 [1] CRAN (R 4.3.3)\n   fastmap       1.1.1   2023-02-24 [1] CRAN (R 4.1.3)\n   htmltools     0.5.7   2023-11-03 [1] CRAN (R 4.3.2)\n   htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.3.2)\n D jsonlite      1.8.8   2023-12-04 [1] CRAN (R 4.3.3)\n   knitr         1.46    2024-04-06 [1] CRAN (R 4.3.3)\n   rlang         1.1.3   2024-01-10 [1] CRAN (R 4.3.3)\n   rmarkdown     2.29    2024-11-04 [1] CRAN (R 4.3.3)\n   rstudioapi    0.15.0  2023-07-07 [1] CRAN (R 4.1.3)\n   sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.1.3)\n   xfun          0.43    2024-03-25 [1] CRAN (R 4.3.3)\n D yaml          2.3.8   2023-12-11 [1] CRAN (R 4.3.2)\n\n [1] D:/R/R-4.5.1/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "01_introducao.html",
    "href": "01_introducao.html",
    "title": "1  Introdução",
    "section": "",
    "text": "Introdução da dissertação",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução</span>"
    ]
  },
  {
    "objectID": "02_metodologia.html",
    "href": "02_metodologia.html",
    "title": "2  Metodologia",
    "section": "",
    "text": "2.1 Coleta de dados\nIntrodução à metodologia\nOs dados foram coletados do portal Corte Aberta do STF, painéis estatísticos de controle concentrado que podem ser acessados aqui. Foram baixados três tabelas do portal e armazenados na pasta DATA/RAW/, conforme Tabela 2.1 abaixo:\nUma vez baixados os dados, eles foram importados utilizando a função readxl::read_xlsx():\n# Importa os processos\n1raw_processos &lt;- readxl::read_xlsx(\"DATA/RAW/raw_processos.xlsx\", na = \"*NI*\")\n\n# Importa as decisões\nraw_decisoes &lt;- readxl::read_xlsx(\"DATA/RAW/raw_decisoes.xlsx\",\n  na = \"*NI*\",\n2  col_types = c(\"guess\", \"date\", \"guess\", \"guess\", \"guess\", \"guess\")\n)\n\n# Importa os legitimados\nraw_legitimados &lt;- readxl::read_xlsx(\"DATA/RAW/raw_legitimados.xlsx\",\n  na = \"*NI*\"\n)\n\n\n1\n\nna = “*NI*”: o STF utiliza o código *NI* para dados faltantes.\n\n2\n\ncol_types: foi preciso na tabela de decisões indicar expressamente o tipo de dado da coluna data\nApós importar os dados, salvei eles em formato .rds para leitura mais posterior mais rápida:\n# Salvar os arquivos raw em rds\nsaveRDS(raw_processos, \"DATA/RAW/raw_processos.rds\")\nsaveRDS(raw_decisoes, \"DATA/RAW/raw_decisoes.rds\")\nsaveRDS(raw_legitimados, \"DATA/RAW/raw_legitimados.rds\")\nO segundo conjunto de dados foram obtidos a partir da raspagem de dados no portal do STF. Primeiro, extraiu-se os dados sobre decisões monocráticas e acórdãos, depois, com base na tabela de acórdãos, foram baixados os arquivos em .pdf dos acórdãos. Para isso, foi utilizado o pacote decJ.\n# Extrai as decisões monocráticas\nraw_monocraticas &lt;- decJ::stf_jurisprudencia(\n  classe = \"ADPF\",\n  base = 'decisoes',\n  quantidade = 3000\n)\n\n# Extrai os acórdãos\nraw_acordaos &lt;- decJ::stf_jurisprudencia(\n  classe = \"ADPF\",\n  base = \"acordaos\",\n  quantidade = 3000\n)\n\n# Salva os arquivos raw em rds\nsaveRDS(raw_monocraticas, \"DATA/RAW/raw_monocraticas.rds\")\nsaveRDS(raw_acordaos, \"DATA/RAW/raw_acordaos.rds\")\nA função decJ::stf_jurisprudencia() funciona da seguinte forma:\n# Função stf_jurisprudencia do pacote decJ\n\nstf_jurisprudencia = function(busca = NULL, classe = NULL, base = c(\"acordaos\", \"decisoes\"), quantidade = 25){\n\n1  header &lt;- httr::add_headers(\"User-Agent\" = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.51\")\n\n2  if (!is.null(busca) & is.null(classe)) {\n    body &lt;- busca_jurisprudencia\n    body$query$bool$filter[[1]]$query_string$query &lt;- busca\n    body$post_filter$bool$must[[1]]$term$base &lt;- base\n  } else if (is.null(busca) & !is.null(classe)) {\n    body &lt;- busca_classe\n    body$query$bool$filter$query_string$query &lt;- classe\n    body$post_filter$bool$must$term$base &lt;- base\n  } else if ((!is.null(busca) & !is.null(classe))) {\n    cli::cli_alert_danger(\"Essa funcao so funciona com busca por palavras chaves OU por classe. Ainda estamos desenvolvendo uma forma de trabalhar com as duas buscas juntas.\")\n    return(NULL)\n  }\n\n3  num_iteracoes &lt;- ceiling(quantidade / 250)\n\n  if (quantidade &gt; 250) {\n    body$size &lt;- 250\n  } else {\n    body$size &lt;- quantidade\n  }\n \n  purrr::map_dfr(1:num_iteracoes, purrr::slowly(~{ \n    body$from &lt;- (.x - 1) * 250\n4    htmlSTF &lt;- httr::POST(\n      \"https://jurisprudencia.stf.jus.br/api/search/search\",\n      body = body,\n      encode = \"json\", header\n    )\n    getContent &lt;- jsonlite::fromJSON(httr::content(htmlSTF, \"text\"))\n    dados &lt;- getContent$result$hits$hits$`_source`\n  }, rate = purrr::rate_delay(5)), .progress = list(format = \"Extraindo {cli::pb_bar} {cli::pb_elapsed}\")) \n}\n\n\n1\n\nAdicionar um User_Agent\n\n2\n\nA função ainda não consegue fazer buscas por palavras-chave e classe, portanto, nesse momento ela identifica se a busca está sendo feita por palavras chave ou por classe e, então, utiliza o body da requisição correto para o tipo de busca. Caso o usuário coloque classe e palavra-chave, a função retorna um erro.\n\n3\n\nComo a API do STF não permite fazer mais do que 250 buscas por vez, aqui ele verifica a quantidade que está sendo buscada e divide por 250 para identificar a quantidade de requisições que serão necessárias.\n\n4\n\nA requisição é feita e como resultado temos uma tabela com os dados solicitados.\nEstas então foram as formas de coletar os dados brutos. Abaixo podemos observar a estrutura dessas tabelas:\nTabela\nNº Colunas\nNº Linhas\nNº de Dados\n\n\n\n\nraw_processos\n32\n8355\n267360\n\n\nraw_decisoes\n6\n17734\n106404\n\n\nraw_legitimados\n3\n16687\n50061\n\n\nraw_acordaos\n57\n632\n36024\n\n\nraw_monocraticas\n37\n1571\n58127",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Metodologia</span>"
    ]
  },
  {
    "objectID": "02_metodologia.html#coleta-de-dados",
    "href": "02_metodologia.html#coleta-de-dados",
    "title": "2  Metodologia",
    "section": "",
    "text": "Tabela 2.1\n\n\n\n\n\nTabela\nDescrição\nArquivo\nData\n\n\n\n\nProcessos\nContém as informações gerais sobre os processos de controle concentrado\nraw_processos.xlsx\n06/06/2025\n\n\nDecisões\nContém as informações sobre as decisões tomadas em sede de controle concentrado\nraw_decisoes.xlsx\n06/06/2025\n\n\nLegitimados\nContém as informações sobre os legitimados ativos e legitimados passivos nas ações de controle concentrado\nraw_legitimados.xlsx\n06/06/2025",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Metodologia</span>"
    ]
  },
  {
    "objectID": "02_metodologia.html#limpeza-dos-dados",
    "href": "02_metodologia.html#limpeza-dos-dados",
    "title": "2  Metodologia",
    "section": "2.2 Limpeza dos dados",
    "text": "2.2 Limpeza dos dados\nUma vez obtidos os dados brutos, foi preciso fazer uma faxina inicial. Primeiro, limpei o nome das variáveis:\n\n# Limpa o nome das variáveis\nclean_processos &lt;- janitor::clean_names(raw_processos)\nclean_decisoes &lt;- janitor::clean_names(raw_decisoes)\nclean_legitimados &lt;- janitor::clean_names(raw_legitimados)\nclean_acordaos &lt;- janitor::clean_names(raw_acordaos)\nclean_monocraticas &lt;- janitor::clean_names(raw_monocraticas)\n\nApós a limpeza dos nomes das variáveis de todas as tabelas, passei a limpar tabelas específicas. Começando pela tabela de processos (clean_processos).\n\nclean_processos &lt;- clean_processos |&gt;\n  # seleciona as colunas que serão utilizadas\n  dplyr::select(\n    processo, link_processo, relator_atual, ramo_do_direito, assunto_relacionado, data_autuacao, data_transito_julgado, data_baixa, em_tramitacao, tem_rito_art_12, legislacao\n  ) |&gt;\n  # transforma as colunas de data \n  dplyr::mutate(\n    data_autuacao = lubridate::ymd(as.Date(data_autuacao)),\n    data_transito_julgado = lubridate::ymd(as.Date(data_transito_julgado)),\n    data_baixa = lubridate::ymd(as.Date(data_baixa, format = \"%d/%m/%Y\"))\n  ) |&gt;\n  # separa processo em classe e numero\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  ) |&gt;\n  # separa os assuntos relacionados\n  tidyr::separate_rows(\n    assunto_relacionado,\n    sep = \"\\\\|\"\n  ) |&gt;\n  # separa a legislação\n  tidyr::separate_rows(\n    legislacao,\n    sep = \"\\\\r\"\n  )\n\n# Salva a tabela limpa\nsaveRDS(clean_processos, \"DATA/CLEAN/clean_processos.rds\")\n\nA segunda tabela que apliquei a faxina foi a tabela que contém as decisões (clean_decisoes). A tabela criada considera apenas as decisões cujo resultado foi procedente, improcedente, procedente em parte ou prejudicado. Posteriormente, as ações que tiverem “em tramitação” igual a “não” na tabela de processos e não retornarem esses resultados, serão consideradas sem resolução de mérito.\n\nclean_decisoes &lt;- clean_decisoes |&gt;\n  # retira a coluna observação e descrição\n  dplyr::select(-observacao, descricao) |&gt;\n  # transforma a coluna de data \n  dplyr::mutate(data = lubridate::ymd(as.Date(data))) |&gt;\n  # separa processo em classe e numero |&gt;\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  ) |&gt;\n  # transforma o texto da coluna descricao em minusculo\n  dplyr::mutate(descricao = stringr::str_to_lower(descricao))\n\n# Salva a tabela limpa\nsaveRDS(clean_decisoes, \"DATA/CLEAN/clean_decisoes.rds\")\n\nA teceira tabela envolve os legitimados (clean_legitimados):\n\nclean_legitimados &lt;- clean_legitimados |&gt;\n  # retira os acentos\n  dplyr::mutate(dplyr::across(c(\"legitimado_polo_ativo\", \"legitimado_polo_passivo\"), decJ::utilitario_remover_acentos)) |&gt;\n  # separa processo em classe e numero\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  )\n\n# Salva a tabela limpa\nsaveRDS(clean_legitimados, \"DATA/CLEAN/clean_legitimados.rds\")\n\nA limpeza da tabela com as decisões monocráticas e os acórdãos envolveu, basicamente, selecionar as colunas de interesse.\n\nclean_monocraticas &lt;- clean_monocraticas |&gt;\n  # seleciona e renomeia as colunas de interesse\n  dplyr::select(id, uf = procedencia_geografica_uf_sigla, numero = processo_numero, data = julgamento_data, texto = decisao_texto)\n\nclean_acordaos &lt;- clean_acordaos |&gt;\n  # seleciona e renomeia as colunas de interesse\n  dplyr::select(id, uf = procedencia_geografica_uf_sigla, numero = processo_numero, data = julgamento_data, texto = ementa_texto, url = inteiro_teor_url)\n\n# Salva as tabelas limpas\nsaveRDS(clean_monocraticas, \"DATA/CLEAN/clean_monocraticas.rds\")\nsaveRDS(clean_acordaos, \"DATA/CLEAN/clean_acordaos.rds\")\n\nSerão feitas limpezas específicas dos dados a depender da análise. Essas limpezas estarão descritas no momento da análise no capítulo respectivo. Ademais, todo o código está compilado no Apêndice A. As tabelas salvas serão carregas sempre antes de serem utilizadas nas análises, permitindo que o ponto de partida das informações sejam os descritos nessa seção.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Metodologia</span>"
    ]
  },
  {
    "objectID": "02_metodologia.html#análise-quantitativa",
    "href": "02_metodologia.html#análise-quantitativa",
    "title": "2  Metodologia",
    "section": "2.3 Análise quantitativa",
    "text": "2.3 Análise quantitativa\nEstatísticas descritivas…\n\n2.3.1 Análise de Sobrevivência\nEste trabalho incorpora uma abordagem quantitativa para investigar um aspecto crucial da prestação jurisdicional: o tempo. A duração de um processo judicial não é um mero detalhe procedimental; ela representa o tempo em que a sociedade, os atores políticos e os cidadãos aguardam por uma definição do judiciário sobre questões de elevada magnitude. A morosidade ou a celeridade do STF impacta diretamente a segurança jurídica, a estabilidade das relações políticas e a própria efetividade dos direitos. Para mensurar e analisar rigorosamente este fator temporal, a metodologia empregada será a análise de sobrevivência, uma técnica estatística que permite estudar a duração da tramitação processual até a ocorrência de um evento de interesse, que, no escopo desta pesquisa, foi definido como a baixa definitiva do processo.\nA análise de sobrevivência é um conjunto de métodos estatísticos cujo objetivo primordial é analisar o tempo decorrido desde um marco inicial até a ocorrência de um determinado evento. Embora suas origens remontem às ciências médicas — onde era classicamente utilizada para estudar o tempo de sobrevida de pacientes após um diagnóstico ou tratamento —, sua aplicabilidade foi expandida para diversas outras áreas, como engenharia (análise de falha de equipamentos), economia (duração do desemprego) e, como no presente caso, o direito. No contexto jurídico-processual, o “tempo de sobrevivência” de um processo pode ser entendido como o período em que ele permanece ativo, ou “vivo”, no sistema de justiça. O “evento” de interesse, análogo à “morte” no estudo clínico, é a sua conclusão, ou seja, a sua baixa definitiva após o trânsito em julgado. Esta metodologia permite-nos ir além de simples médias ou medianas de duração, oferecendo uma visão dinâmica de como a probabilidade de um processo ser finalizado evolui ao longo do tempo.\nUm dos desafios mais significativos na análise de dados temporais em pesquisas jurídicas é a presença de “dados censurados”. A censura ocorre quando não observamos o evento de interesse para todos os sujeitos da nossa amostra durante o período de estudo. Em nossa pesquisa, que abrange as ADPFs distribuídas até uma data de corte específica, inevitavelmente encontraremos processos que, ao final do período de coleta de dados, ainda estão em tramitação. Esses processos são os nossos dados censurados. Simplesmente ignorá-los ou tratá-los como se tivessem sido finalizados na data de corte introduziria um viés severo na análise, subestimando drasticamente o tempo real de tramitação. A grande vantagem da análise de sobrevivência, e especificamente do método de Kaplan-Meier que adotaremos, é sua capacidade de incorporar essa informação parcial dos dados censurados de forma elegante e precisa, utilizando a informação de que eles “sobreviveram” pelo menos até o final do período de observação, sem presumir quando serão de fato concluídos.\nPara contornar o problema dos dados censurados e estimar a função de sobrevivência dos processos de ADPF, esta dissertação empregará o estimador de Kaplan-Meier. Trata-se de um método não paramétrico, o que representa uma vantagem considerável, pois não nos obriga a fazer pressuposições sobre a distribuição estatística subjacente dos tempos de tramitação dos processos. Em outras palavras, não precisamos assumir que os tempos de julgamento seguem uma forma matemática pré-definida. O método de Kaplan-Meier utiliza a informação disponível no momento exato em que cada processo é finalizado para recalcular, passo a passo, a probabilidade de um processo qualquer “sobreviver”, ou seja, permanecer ativo, para além daquele ponto no tempo. O resultado é uma estimativa mais realista e detalhada da dinâmica temporal da jurisdição constitucional, apresentada geralmente por meio de uma função em escada, conhecida como curva de Kaplan-Meier.\nA fórmula matemática que fundamenta o estimador de Kaplan-Meier, embora possa parecer complexa à primeira vista, baseia-se em uma lógica bastante intuitiva. A probabilidade de um processo sobreviver para além de um tempo \\(t\\), denotada por \\(S(t)\\), é calculada pelo produto das probabilidades de sobrevivência em cada um dos momentos em que ocorre um evento (a baixa de um processo) até o tempo \\(t\\). A fórmula é a seguinte:\n\\[\nS(t) = \\prod_{i:t_i\\leq t} (1 - \\frac{d_i}{n_i})\n\\tag{2.1}\\]\n\\(S(t)\\) é a função de sobrevivência, ou seja, a probabilidade estimada de que uma ADPF inda esteja em tramitação após um tempo \\(t\\). O símbolo \\(\\prod\\) é o produtório, que indica a multiplicação sucessiva de termos. O índice \\(t_i\\leq t\\) significa que estamos multiplicando os termos para todos os momentos \\(t_i\\) em que um processo foi baixado, desde o início do acompanhamento até o tempo \\(t\\). O elemento \\(d_i\\) representa o número de processos que tiveram baixa exatamente no tempo \\(t_i\\). Por fim, \\(n_i\\) representa o número total de processos que estavam sob risco de serem baixados imediatamenteantes do tempo \\(t_i\\), isto é, todos os processos que ainda estavam ativos naquele momento.\nO termo central \\(\\frac{d_i}{n_i}\\) representa o risco instantâneo de um processo ser baixado no tempo \\(t_i\\). É a proporção de processos baixados dentre todos que estavam ativos. Consequentemente, a expressão \\((1-\\frac{d_i}{n_i})\\) representa a probabilidade de um processo não ser baixado naquele exato momento, ou seja, de sobreviver ao tempo \\(t_i\\), dado que ele já havia sobrevivido até ali. Ao multiplicar essas probabilidade de sobrevivência em cada etapa, calculamos a probabilidade acumulada de um processo ter sobrevivido a todos os momentos de risco até o tempo \\(t\\).\nAo quantificar a dimensão temporal da prestação jurisdicional em ADPFs de forma precisa, controlando os efeitos dos processos ainda em curso, esta pesquisa pode fundamentar suas conclusões em evidências sistemáticas, e não apenas em observações anedóticas ou estudos de caso isolados. A análise da curva de sobrevivência permitirá identificar períodos críticos na tramitação dos processos e oferecerá uma base sólida para discutir a capacidade institucional do STF em responder, em tempo hábil, às complexas demandas que lhe são apresentadas pelos atores políticos.\nApós a aplicação do estimador de Kaplan-Meier, que nos permite descrever a probabilidade de uma ADPF permanecer em tramitação ao longo do tempo, a investigação avança para uma questão mais complexa e explicativa: quais fatores ou características influenciam essa duração? Enquanto a análise de Kaplan-Meier nos mostra o quê acontece com a taxa de finalização dos processos, ela não nos informa o porquê. Por que algumas ADPFs são julgadas em poucos meses, enquanto outras perduram por mais de uma década no Supremo Tribunal Federal (STF)? Para responder a essa pergunta, a metodologia desta pesquisa emprega o modelo de regressão de riscos proporcionais de Cox. Este é um passo analítico subsequente e mais sofisticado, que nos permite avaliar o impacto de múltiplas variáveis (covariáveis) sobre o tempo de tramitação processual, identificando os fatores que aceleram ou retardam a baixa definitiva de uma ADPF.\n\n\n2.3.2 Regressão Logística",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Metodologia</span>"
    ]
  },
  {
    "objectID": "02_metodologia.html#análise-qualitativa",
    "href": "02_metodologia.html#análise-qualitativa",
    "title": "2  Metodologia",
    "section": "2.4 Análise qualitativa",
    "text": "2.4 Análise qualitativa\nIramuteq… e quanteda?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Metodologia</span>"
    ]
  },
  {
    "objectID": "04_adpfs.html",
    "href": "04_adpfs.html",
    "title": "4  Estudo das ADPF",
    "section": "",
    "text": "4.1 Considerações parciais\nA intensidade da judicialização da política no Brasil pode ser diretamente aferida pela análise do volume de ações de controle concentrado de constitucionalidade ajuizadas no Supremo Tribunal Federal (STF). Instrumentos como a Ação Direta de Inconstitucionalidade (ADI), a Ação Declaratória de Constitucionalidade (ADC), a Ação Direta de Inconstitucionalidade por Omissão (ADO) e, notadamente, a Arguição de Descumprimento de Preceito Fundamental (ADPF) constituem os principais canais pelos quais questões políticas são submetidas a um veredito sobre sua compatibilidade com a Constituição. Desde a promulgação da Carta de 1988, um total de 8355 ações dessa natureza foram propostas, evidenciando a consolidação do STF como uma arena de disputas de alta relevância.\nA distribuição dessas ações, contudo, não é homogênea ao longo do tempo. Conforme ilustra o panorama quantitativo, o período de 2014 a 2024 se destaca por uma escalada sem precedentes no número de processos, com um ápice em 2021. Essa variação anual não é um dado isolado; ela pode refletir a conjuntura política do país. Períodos de maior conflito, marcados por eventos como a Operação Lava Jato, o impeachment presidencial e a pandemia de COVID-19, sugerem que o STF foi instado a atuar como árbitro em disputas cruciais entre atores políticos e sobre a condução de políticas públicas.\nDentro deste universo de ações, este capítulo se debruça especificamente sobre a Arguição de Descumprimento de Preceito Fundamental. A ADPF se destaca como um instrumento de particular interesse devido à sua crescente utilização e flexibilidade para contestar não apenas leis, mas um vasto leque de atos do poder público, incluindo omissões. O objetivo é, portanto, realizar uma análise aprofundada do que representou a ADPF nos últimos dez anos, investigando os padrões de seu ajuizamento, os temas veiculados e, principalmente, os fatores que determinam a longevidade de sua tramitação no Tribunal.\nPara alcançar tal objetivo, esta análise emprega uma de análise de sobrevivência, que permite verificar o tempo médio até a ocorrência de um evento – no caso, a baixa do processo. Utilizando modelos como o de Kaplan-Meier e o de riscos proporcionais de Cox, o capítulo investigará de que forma a celeridade processual é influenciada por variáveis-chave. Serão examinados o impacto da identidade do ministro relator, a aplicação do rito abreviado, o perfil do legitimado que propõe a ação e o resultado do julgamento, buscando compreender a complexa dinâmica temporal que rege este importante instrumento da jurisdição constitucional brasileira.\nDesde a promulgação da Constituição de 1988 foram ajuizadas 8355 ações de controle concentrado, distribuídas heterogeneamente ao longo do período. A Figura 4.1 abaixo representa o número de ações de controle concentrado ajuizadas por ano, o período destacado em laranja se refere ao recorte temporal desta pesquisa (2014-2024) e a linha cinza a tendência:\nO período de 1988 à 2013 apresenta um crescimento gradual e não linear com pico entre 2003-2004 seguido de um vale. A linha de tendência suavizada confirma esse movimento ascendente, indicado que, apesar das flutuações anuais, o recurso ao Judiciário se consolida de forma consistente nas duas primeiras décadas de redemocratização.\nA partir de 2014, o podemos perceber uma escalada no número de processos, tendo seu ápice em 2021. Os anos que sucederam 2014 foram marcados pela Operação Lava Jato, Impeachment da ex-Presidente Dilma Roussef, COVID-19, etc., sugerindo que o Supremo Tribunal Federal passou a ser arbitrado não apenas sobre a constitucionalidade das leis, mas sobre decisões políticas cruciais e disputas entre atores políticos e condução de políticas públicas. Por fim, o segmento final do gráfico induz um novo regime com a queda abrupta no número de processos retornando a patamares anteriores à 2019.\nCorroborando a relevância desses números, um estudo de Nunes (2022) aponta que, entre 1º de janeiro de 2019 e 30 de dezembro de 2022, durante o governo Bolsonaro, foram ajuizadas 262 ADI por partidos políticos perante o STF. A comparação desse dado específico com o total de ADI recebidas pelo tribunal pode revelar a proporção da judicialização que é diretamente impulsionada por atores políticos partidários.\nA variação anual no número de ações, portanto, não é um dado isolado. Ela pode refletir a conjuntura política – períodos de maior conflito tendem a gerar mais demandas judiciais – assim como estratégias específicas dos atores envolvidos, como o uso mais intenso do judiciário pela oposição para contestar ações governamentais.\nA análise gráfica permite identificar momentos de intensificação (picos) ou retração (vales) na propositura de ações judiciais. A correlação desses movimentos com eventos políticos significativos – como eleições, crises institucionais, mudanças de governo, escândalos de corrupção ou pandemias – é crucial para compreender a dinâmica da judicialização.\nA relação de processos já findos nos permite observar o modo como o Tribunal prioriza o julgamento das ações de controle concentrado. Como esperado, a Figura 4.2 mostra que o STF não possui muitas ações pendentes de julgamento se considerarmos a quantidade total de ações ajuizadas:\nSão poucas as ações que aguardam mais de 10 anos de julgamento. Uma análise de sobrevivência permitiará que se observe o tempo mediano que a ação leva para ser baixada. Conforme exposto na metodologia, a análise de sobrevivência permite que se verifique o tempo até um evento de interesse ocorrer, inclusive se os dados possuírem censuras (eventos que não ocorreram). O modelo de Kaplan-Meier permite estimar a função de sobrevivência a partir de dados de tempo até um evento, sem fazer suposições sobre a distribuição de probabilidades. A função de sobrevivência Equação 2.1, é obtida pela proporção de indivíduos que sobreviveram cada vez que um evento ocorre e multiplicando essa proporção pela probabilidade acumulada até então, gerando um gráfico de escada descendente.\nA Figura 4.3 demonstra a curva de sobrevivência de Kaplan-Meier para as ações de controle concentrado em um modelo nulo. A função de sobrevivência das ações de controle concentrado em razão do tempo utilizando de um modelo nulo permite observar que a expectativa é que metade dos processos encerrem em aproximadamente 4.97 anos.\nDentre as ações de controle concentrado previstas no sistema de revisão judicial, destaca-se a arguição de descumprimento de preceito fundamental.\nFALAR SOBRE A ADPF\nOs dados mostram que, desde a sua regulamentação, já foram ajuizadas 1217 ADPF. A Figura 4.4 abaixo mostra a distribuição de ADPF ao longo do tempo, com o destaque do período de estudo de 2014 a 2024 e linha de tendência:\nNota-se que a ADPF foi uma ação de controle pouco utilizada inicialmente, mas que, ao longo do tempo, recebeu atenção dos legitimados para a sua proposição. No primeiro período de 2000 a 2014, observa-se um volume de ações relativamente baixo e estável, as flutuações anuais são modestas, e raramente ultrapassando a marca de 40 processos. A partir de 2015, o cenário muda completamente, atingindo picos de mais de 150 processos em 2021. A curva de tendência coincide com o período de pandemia e Governo Bolsonaro (2019-2022). Após o ápice, a análise para os anos subsequentes revela um movimento de arrefecimento, com uma queda considerável no número de ajuizamentos. Contudo, os patamares de 2022 a 2024, embora menores que o pico, permanecem significativamente superior à média do período anterior a 2016. Isso pode indicar o estabelecimento de um “novo normal” na utilização da ADPF.\nO uso crescente da ADPF pode indicar tanto uma maior conscientização dos atores jurídicos e políticos sobre seu potencial quanto uma percepção de que outros instrumentos processuais ou os canais políticos tradicionais são insuficientes para lidar com certas violações de direitos ou impasses institucionais. A ADPF permite contestar não apenas leis ou atos normativos específicos, mas também atos do poder público de natureza diversa, incluindo omissões ou um conjunto de atos que, cumulativamente, gerem lesão a preceito fundamental. Um aumento no número de ADPFs pode sugerir que os problemas levados ao STF são cada vez mais de natureza estrutural ou difusa, transcendendo a simples inconstitucionalidade de uma lei ou ato normativo.\nA pandemia não apenas gerou novas demandas por direitos (como acesso a leitos, medicamentos e vacinas), mas também expôs e intensificou tensões federativas preexistentes. A ausência de uma coordenação nacional clara e a divergência de posturas entre o governo federal e os governos estaduais e municipais levaram a uma profusão de conflitos que desaguaram no STF, que atuou como árbitro dessas disputas. Decisões sobre a autonomia de instituições federais de ensino para exigir comprovante de vacina, contrariando diretrizes do Ministério da Educação, ou a suspensão de atos da FUNAI que negavam proteção a terras indígenas não homologadas durante a crise sanitária, são exemplos dessa mediação de conflitos verticais (entre o governo federal e outros entes ou instituições) e horizontais (entre diferentes políticas públicas) pelo Supremo.\nObservado o crescimento no número de ADPF ajuizadas por ano, é possível verificar quais ramos do direito e assunto estão sendo discutidos nessas ações:\nUma vez mapeado o “o quê” — os temas que dominam o universo das ADPFs —, a análise se volta para o “quem”: os membros do Tribunal responsáveis por conduzir esses processos. A forma como o Supremo Tribunal Federal processa essa avalanche de demandas de alta complexidade política não é homogênea, sendo crucial entender como a carga processual se distribui entre os ministros e se há concentração de relatorias, um fator que pode influencia diretamente o andamento e o destino das arguições.\nNo que tange aos ministros relatores das arguições, a média de relatorias por ministro é de aproximadamente 58,6 processos, no entanto com uma alta variabilidade. Por exemplo, a Ministra Cármen Lúcia relata 91 processos, enquanto o Min. Flávio Dino apenas 23. Isso se dá, obviamente, pelo tempo de tribunal. Além do fato de que os dados considerando o relator atual do processo, e não o relator inicial. Isso quer dizer, quando um ministro se aposenta sem que os processos tenham encerrado, é designado um novo relator – é esse novo relator que recebe o dado. Observa-se que os Ministros Celso de Mello e Marco Aurélio possuem de 2014 a 2024 apenas 27 e 31 processos, respectivamente.\nA constatação de uma distribuição achatada das relatorias leva naturalmente à pergunta seguinte: essa concentração de poder processual impacta a celeridade dos julgamentos? Deixando a análise estática da distribuição de casos, o estudo avança para uma perspectiva dinâmica, buscando mensurar o tempo de vida de uma ADPF dentro do Tribunal. É preciso, primeiramente, estabelecer uma linha de base para entender quanto tempo, em média, uma arguição leva para ser concluída, antes de investigar os fatores que podem acelerar ou retardar esse processo.\nAssim com as ações de controle concentrado em geral, as ADPF possuem tempo próprio de resposta pelo STF cujos prazos podem ser influenciados a depender de diferentes fatores. No momento, analisa-se em relação a um modelo nulo – independentemente de qualquer variável, em relação ao relator e em relação ao tipo de legitimado.\nO modelo nulo para um conjunto de 1217 processos, considerando que em 995 ocorreram o evento de interesse indica que a mediana do tempo de sobrevivência foi de 746 dias, ou seja, metade das ADPF da amostra levaram aproximadamente 2.04 anos para serem baixadas. Isso significa que, geralmente, as ADPF são concluídas antes das ações de controle concentrado em geral.\nSaber que metade das ADPFs é encerrada em pouco mais de dois anos oferece um panorama geral valioso, mas oculta as variações significativas que existem caso a caso. O que explica por que algumas ações são decididas em meses, enquanto outras aguardam anos? O primeiro fator a ser testado é a influência do ministro relator. Utilizando o modelo de riscos proporcionais de Cox, é possível ir além da média e quantificar o efeito que cada relator individualmente exerce sobre a celeridade processual. A partir desse ponto, considere que estão sendo avaliadas apenas as ADPF ajuizadas entre 2014 e 2024, e não mais sobre todo o período. A Figura 4.7 é a curva de sobrevivência ajustada para esse período com base no modelo nulo:\nComo observado acima, a distribuição de processos entre os ministros é achatada, isto é, temos uma alta variabilidade de ações. Isso influencia no prazo de conclusão do processo? O modelo de Cox inicialmente indicou que, por exemplo, os ministros Carmem Lucia, Celso de Mello e Ricardo Lewandowski geralmente encerram seus processo mais rápido do que os demais ministros. André Mendonça é o ministro mais “lento”: o risco dos processos terminarem quando ele é relator é de apenas 0.213, isto é, 80% menor do que a referência. A Tabela 4.2 abaixo apresenta os resultados do modelo:\nA partir dos dados obtidos do modelo, é possível identificar dois grupos, além de uma característica do ministro de referência, Alexandre de Moraes. O fato de quase todos os coeficientes significativos serem negativos indica que o ritmo de julgamento do ministro Alexandre de Moraes é o mais rápido do Tribunal para ADPFs estabelecendo um padrão elevando com o qual seus pares são comparados.\nOs resultados mais contundentes do modelo apontam para um grupo de ministros cujo ritmo de julgamento é significativamente mais lento que o da linha de base. À frente deste grupo estão os Ministros Cristiano Zanin e André Mendonça, com Razões de Risco de 0.20 e 0.21, respectivamente. Isso significa que a taxa de julgamento de ADPFs sob suas relatorias é aproximadamente 80% mais lenta que a do Ministro Moraes. Este é um resultado contraintuitivo, pois se poderia esperar que novos ministros fossem mais ágeis para marcar posição ou reduzir acervos. O fato de que os dois nomeados mais recentes, provenientes de polos políticos antagônicos (Mendonça indicado por Jair Bolsonaro e Zanin por Luiz Inácio Lula da Silva), exibem um comportamento estatístico semelhante sugere que a causa da lentidão não é ideológica. A explicação mais plausível reside em um “efeito de aprendizado” ou em uma cautela adicional de recém-chegados ao lidar com a complexidade e a sensibilidade política inerentes às ADPFs. Suas trajetórias prévias, como advogado de defesa em um caso de alta notoriedade (Zanin) e como Advogado-Geral da União (Mendonça), podem ter cultivado um estilo mais meticuloso e de construção de caso, em contraste com a celeridade executiva de Moraes. Outro fator pode ser o fato desses ministros terem herdado processos antigos de ministros aposentados, aumentando o efeito do tempo sobre seus processos.\nO segundo grupo revela ministros cujo ritmo de julgamento não é estatisticamente distinguível do da linha de base, o ministro Alexandre de Moraes. Este grupo inclui os ministros Cármen Lúcia, Celso de Mello, Ricardo Lewandowski, Dias Toffoli e Marco Aurélio. A ausência de um efeito estatisticamente significativo é, em si, um achado relevante. Sugere que estes ministros compõem a “mediana” da Corte em termos de celeridade para ADPFs, com os demais se desviando significativamente para um ritmo mais lento.\nA análise demonstra, portanto, que a identidade do relator é uma variável-chave na equação da celeridade processual. Contudo, para além das características individuais dos julgadores, existem mecanismos processuais internos ao Tribunal que são projetados para influenciar o ritmo dos julgamentos. Dentre eles, destaca-se a aplicação do rito abreviado. A investigação se volta agora para este fator, buscando determinar se sua utilização cumpre, na prática, a promessa de acelerar a entrega da prestação jurisdicional.\nPrimeiramente, é preciso destacar que o rito abreviado não está previsto na Lei nº 9882/1999 – que regulamenta a ADPF, mas é amplamente utilizado de modo genérico no controle concentrado, embora só esteja previsto na regulamentação da ADI, ADO e ADC. Segundo esse rito, havendo medida cautelar, o relator, após prazo de dez dias para inforações e cinco dias para manifestação do Advogado-Geral da União e o Procurador-Geral da República, pode submeter o processo direto ao plenário para julgar definitivamente a ação - sem a necessidade de avaliar a liminar previamente.\nNo escopo dos processos analisados, cerca de 136 processo adotaram o rito abreviado. Mas, o rito abreviado reduz o tempo de julgaento da ação? Conforme se observa na Figura 4.8, as ações sem o rito abreviado são encerradas mais rapidamente do que as ações com o rito abreviado, o que é contraintuitivo. Isso pode ser explicado, principalmente, pelo fato de que boa parte das ações foram extintas sem resolução de mérito - antes mesmo de se discutir a viabilidade do rito abreviado.\nA fim de testar os efeitos da variável sobre o tempo, o modelo de Cox confirmou que possuir o rito abreviado diminui o risco do processo encerrar, isto é, o rito abreviado tem efeito retardatário (\\(\\beta = -0,2136\\); \\(exp(\\beta) = 0,8077\\); \\(p = 0,0421\\)). No entanto, como foi possível observar na Figura 4.8, as linhas se cruzam em um determinado momento, sugerindo que os riscos não são proporcionais - o que viola os pressupostos modelo. O teste dos resíduos de Schoenfeld confirmou essa constatação - os riscos não são proporcionais (\\(p &lt; 0,05\\)). A linha suavizada que representa a tendência dos resíduos ao longo do tempo não é horizontal, exibindo uma inclinação positiva. Isso indica que o efeito da variável sobre o risco não é constante, mas sim varia em função do tempo, aumentando progressivamente.\nPara corrigir a violação, optou-se por ajustar modelo de Cox com um coeficiente dependente do tempo (time-dependent coefficient). Foi incluído um termo de interação entre a variável e uma função linear do tempo.\nA interpretação dos coeficientes revela uma dinâmica complexa. O coeficiente principal corresponde a um HR inicial de 0,48, indicando um forte efeito protetor no tempo zero. Contudo, o coeficiente positivo para o termo de interação demonstra que este efeito protetor se dissipa progressivamente com o passar do tempo. O HR evolui, atingindo o valor de 1,0 (ausência de efeito) no tempo aproximado de 1018 dias, e se inverte para um fator de risco em tempos subsequentes (HR = 1,41 em t = 1500 dias).\nOcorre que, conforme anotado anteriormente, o rito abreviado apresenta um efeito contraintuitivo de prolongar o prazo de conclusão do processo. Considerando que o resultado do processo pode influenciar no seu tempo, a próxima análise visa estimar o tempo de conclusão do processo com relação ao tipo de resultado.\nA Figura 4.10 ilustra a distribuição dos resultados das Arguições de Descumprimento de Preceito Fundamental (ADPF) ajuizadas no Supremo Tribunal Federal. A análise dos dados revela uma proeminente concentração de ações julgadas como “Sem mérito”, superando a marca de 400 casos. Este resultado é expressivamente superior às demais categorias, indicando que uma parcela majoritária das ADPFs sequer tem seu mérito analisado pela Corte, sendo extintas por questões processuais preliminares, como a ausência de requisitos de admissibilidade.\nEm um segundo patamar de frequência, as ações julgadas “Procedente”, com aproximadamente 125 casos, representam o segundo grupo mais expressivo, sinalizando o acolhimento material dos pedidos em número considerável. Logo após, surgem as ações consideradas “Prejudicado”, com cerca de 75 ocorrências, e “Procedente em parte”, com aproximadamente 50. A categoria com menor incidência é a de “Improcedente”, com menos de 50 casos, o que sugere que, uma vez admitida a ação, a chance de uma negativa total ao pedido é a menor entre todos os desfechos possíveis.\nA análise de sobrevivência indicou uma relação entre o resultado e a duração do processo. Os processos extintos “Sem mérito” são os mais céleres, com um tempo mediano de 282 dias para sua conclusão. Este dado reforça a ideia de que a triagem inicial de requisitos processuais funciona como um filtro rápido, que impede o prosseguimento de ações que não atendem às condições formais de conhecimento, otimizando o tempo da Corte.\nPor outro lado, as ações que chegam a uma decisão de mérito apresentam uma duração consideravelmente maior. De forma notável, os processos julgados “Improcedentes” são os mais longos, com uma mediana de 990 dias. Este é um tempo superior ao das ações “Procedentes” (750 dias) e “Procedentes em parte” (639 dias).\nA Figura 4.11 ilustra esses resultados:\nA aplicação do modelo de riscos de Cox aprofunda a análise, permitindo quantificar a velocidade de resolução das ADPFs com base no seu resultado, tendo como referência a categoria “Improcedente” (a mais lenta). O modelo como um todo é estatisticamente robusto (p &lt; 0.001), indicando que o tipo de resultado é um fator preditivo determinante para a duração do processo. A análise das razões de risco revela que as ações extintas “Sem mérito” possuem uma chance 140% maior de serem concluídas a qualquer momento em comparação com as julgadas improcedentes.\nDa mesma forma, as ações declaradas “Prejudicadas” também demonstram uma celeridade notável, com uma chance de resolução 89% maior em relação ao grupo de referência. Ambas as categorias apresentam resultados com alta significância estatística (p &lt; 0.01). Em contrapartida, os resultados para “Procedente” e “Procedente em parte” não mostraram uma diferença estatisticamente significativa em relação ao tempo de julgamento das “Improcedentes”, sugerindo que, uma vez admitida para análise de mérito, a duração do processo até sua decisão final tende a ser similar, independentemente de a Corte acolher ou rejeitar o pedido.\nAnalisando individualmente os resíduos cada categoria, observa-se que o efeito dos resultados “Sem mérito”, “Procedente” e “Prejudicado” varia significativamente ao longo do tempo. Isso significa que a magnitude do “risco” de um processo ser finalizado para essas categorias não é constante. Por exemplo, a celeridade de um processo “Sem mérito” é muito mais acentuada nos meses iniciais do que em estágios mais tardios do processo judicial.\nComplementando análise, observou-se que as ações com o rito abreviado não influenciam na aceleração do processo. A hipótese é de que as ações são extintas sem resolução de mérito, tornando o indicador do modelo sobre o rito abreviado falso. Por isso, foi criado um modelo que interege as duas variáveis: rito abreviado e resultado.\nA aplicação do rito abreviado, concebido para acelerar o julgamento de mérito, não impacta os processos de maneira uniforme, apresentando resultados por vezes contraintuitivos quando cruzado com o desfecho da ação. O achado mais expressivo está na categoria “Sem mérito”: enquanto as ações sem o rito especial são resolvidas em uma mediana de apenas 215 dias, aquelas submetidas ao rito levam 654 dias.\nEssa aparente contradição é metodologicamente significativa. O rito abreviado pressupõe a superação das questões de admissibilidade para focar no mérito. Portanto, os processos que seguem por essa via e, ainda assim, terminam “sem mérito” são exceções complexas, cujo vício processual só foi detectado em fase avançada. De forma similarmente inesperada, as ações “Procedentes” e “Prejudicadas” também foram mais lentas quando submetidas ao rito abreviado.\nEm contrapartida, o efeito acelerador do rito abreviado funcionou como o esperado nas ações julgadas “Improcedentes” (reduzindo o tempo de 1003 para 756 dias) e “Procedentes em parte” (de 674 para 589 dias). Fica claro, portanto, que o impacto do rito abreviado não é absoluto, mas sim contextual. Sua aplicação revela dinâmicas processuais complexas no STF, onde a interação entre o procedimento adotado e a natureza do caso define o verdadeiro ritmo do processo judicial.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Estudo das ADPF</span>"
    ]
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "Apêndice A — Código",
    "section": "",
    "text": "Introdução",
    "crumbs": [
      "Apêndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Código</span>"
    ]
  },
  {
    "objectID": "code.html#metodologia",
    "href": "code.html#metodologia",
    "title": "Apêndice A — Código",
    "section": "Metodologia",
    "text": "Metodologia\n\nknitr::opts_chunk$set(\n  warning = FALSE, error = FALSE, message = FALSE\n)\n\n# Importa os processos\nraw_processos &lt;- readxl::read_xlsx(\"DATA/RAW/raw_processos.xlsx\", na = \"*NI*\")\n\n# Importa as decisões\nraw_decisoes &lt;- readxl::read_xlsx(\"DATA/RAW/raw_decisoes.xlsx\",\n  na = \"*NI*\",\n  col_types = c(\"guess\", \"date\", \"guess\", \"guess\", \"guess\", \"guess\")\n)\n\n# Importa os legitimados\nraw_legitimados &lt;- readxl::read_xlsx(\"DATA/RAW/raw_legitimados.xlsx\",\n  na = \"*NI*\"\n)\n\n# Salvar os arquivos raw em rds\nsaveRDS(raw_processos, \"DATA/RAW/raw_processos.rds\")\nsaveRDS(raw_decisoes, \"DATA/RAW/raw_decisoes.rds\")\nsaveRDS(raw_legitimados, \"DATA/RAW/raw_legitimados.rds\")\n\n# Extrai as decisões monocráticas\nraw_monocraticas &lt;- decJ::stf_jurisprudencia(\n  classe = \"ADPF\",\n  base = 'decisoes',\n  quantidade = 3000\n)\n\n# Extrai os acórdãos\nraw_acordaos &lt;- decJ::stf_jurisprudencia(\n  classe = \"ADPF\",\n  base = \"acordaos\",\n  quantidade = 3000\n)\n\n# Salva os arquivos raw em rds\nsaveRDS(raw_monocraticas, \"DATA/RAW/raw_monocraticas.rds\")\nsaveRDS(raw_acordaos, \"DATA/RAW/raw_acordaos.rds\")\n\n# Função stf_jurisprudencia do pacote decJ\n\nstf_jurisprudencia = function(busca = NULL, classe = NULL, base = c(\"acordaos\", \"decisoes\"), quantidade = 25){\n\n  header &lt;- httr::add_headers(\"User-Agent\" = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.51\")\n\n  if (!is.null(busca) & is.null(classe)) {\n    body &lt;- busca_jurisprudencia\n    body$query$bool$filter[[1]]$query_string$query &lt;- busca\n    body$post_filter$bool$must[[1]]$term$base &lt;- base\n  } else if (is.null(busca) & !is.null(classe)) {\n    body &lt;- busca_classe\n    body$query$bool$filter$query_string$query &lt;- classe\n    body$post_filter$bool$must$term$base &lt;- base\n  } else if ((!is.null(busca) & !is.null(classe))) {\n    cli::cli_alert_danger(\"Essa funcao so funciona com busca por palavras chaves OU por classe. Ainda estamos desenvolvendo uma forma de trabalhar com as duas buscas juntas.\")\n    return(NULL)\n  }\n\n  num_iteracoes &lt;- ceiling(quantidade / 250)\n\n  if (quantidade &gt; 250) {\n    body$size &lt;- 250\n  } else {\n    body$size &lt;- quantidade\n  }\n \n  purrr::map_dfr(1:num_iteracoes, purrr::slowly(~{ \n    body$from &lt;- (.x - 1) * 250\n    htmlSTF &lt;- httr::POST(\n      \"https://jurisprudencia.stf.jus.br/api/search/search\",\n      body = body,\n      encode = \"json\", header\n    )\n    getContent &lt;- jsonlite::fromJSON(httr::content(htmlSTF, \"text\"))\n    dados &lt;- getContent$result$hits$hits$`_source`\n  }, rate = purrr::rate_delay(5)), .progress = list(format = \"Extraindo {cli::pb_bar} {cli::pb_elapsed}\")) \n}\n\n# Faz a leitura dos arquivos raw para utilizar no script\nraw_processos &lt;- readRDS('DATA/RAW/raw_processos.rds')\nraw_decisoes &lt;- readRDS('DATA/RAW/raw_decisoes.rds')\nraw_legitimados &lt;- readRDS('DATA/RAW/raw_legitimados.rds')\nraw_monocraticas &lt;- readRDS('DATA/RAW/raw_monocraticas.rds')\nraw_acordaos &lt;- readRDS('DATA/RAW/raw_acordaos.rds')\n\n# Cria uma tabela com as informações dos dados raw\ntibble::tribble(\n  ~\"Tabela\", ~\"Nº Colunas\", ~\"Nº Linhas\", ~\"Nº de Dados\",\n  \"raw_processos\", ncol(raw_processos), nrow(raw_processos), ncol(raw_processos) * nrow(raw_processos),\n  \"raw_decisoes\", ncol(raw_decisoes), nrow(raw_decisoes), ncol(raw_decisoes) * nrow(raw_decisoes),\n  \"raw_legitimados\", ncol(raw_legitimados), nrow(raw_legitimados), ncol(raw_legitimados) * nrow(raw_legitimados),\n  \"raw_acordaos\", ncol(raw_acordaos), nrow(raw_acordaos), ncol(raw_acordaos) * nrow(raw_acordaos),\n  \"raw_monocraticas\", ncol(raw_monocraticas), nrow(raw_monocraticas), ncol(raw_monocraticas) * nrow(raw_monocraticas)\n) |&gt; knitr::kable()\n\n# Limpa o nome das variáveis\nclean_processos &lt;- janitor::clean_names(raw_processos)\nclean_decisoes &lt;- janitor::clean_names(raw_decisoes)\nclean_legitimados &lt;- janitor::clean_names(raw_legitimados)\nclean_acordaos &lt;- janitor::clean_names(raw_acordaos)\nclean_monocraticas &lt;- janitor::clean_names(raw_monocraticas)\n\nclean_processos &lt;- clean_processos |&gt;\n  # seleciona as colunas que serão utilizadas\n  dplyr::select(\n    processo, link_processo, relator_atual, ramo_do_direito, assunto_relacionado, data_autuacao, data_transito_julgado, data_baixa, em_tramitacao, tem_rito_art_12, legislacao\n  ) |&gt;\n  # transforma as colunas de data \n  dplyr::mutate(\n    data_autuacao = lubridate::ymd(as.Date(data_autuacao)),\n    data_transito_julgado = lubridate::ymd(as.Date(data_transito_julgado)),\n    data_baixa = lubridate::ymd(as.Date(data_baixa, format = \"%d/%m/%Y\"))\n  ) |&gt;\n  # separa processo em classe e numero\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  ) |&gt;\n  # separa os assuntos relacionados\n  tidyr::separate_rows(\n    assunto_relacionado,\n    sep = \"\\\\|\"\n  ) |&gt;\n  # separa a legislação\n  tidyr::separate_rows(\n    legislacao,\n    sep = \"\\\\r\"\n  )\n\n# Salva a tabela limpa\nsaveRDS(clean_processos, \"DATA/CLEAN/clean_processos.rds\")\n\nclean_decisoes &lt;- clean_decisoes |&gt;\n  # retira a coluna observação e descrição\n  dplyr::select(-observacao, descricao) |&gt;\n  # transforma a coluna de data \n  dplyr::mutate(data = lubridate::ymd(as.Date(data))) |&gt;\n  # separa processo em classe e numero |&gt;\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  ) |&gt;\n  # transforma o texto da coluna descricao em minusculo\n  dplyr::mutate(descricao = stringr::str_to_lower(descricao))\n\n# Salva a tabela limpa\nsaveRDS(clean_decisoes, \"DATA/CLEAN/clean_decisoes.rds\")\n\nclean_legitimados &lt;- clean_legitimados |&gt;\n  # retira os acentos\n  dplyr::mutate(dplyr::across(c(\"legitimado_polo_ativo\", \"legitimado_polo_passivo\"), decJ::utilitario_remover_acentos)) |&gt;\n  # separa processo em classe e numero\n  tidyr::separate(\n    processo,\n    into = c(\"classe\", \"numero\"),\n    sep = \"\\\\s\"\n  )\n\n# Salva a tabela limpa\nsaveRDS(clean_legitimados, \"DATA/CLEAN/clean_legitimados.rds\")\n\nclean_monocraticas &lt;- clean_monocraticas |&gt;\n  # seleciona e renomeia as colunas de interesse\n  dplyr::select(id, uf = procedencia_geografica_uf_sigla, numero = processo_numero, data = julgamento_data, texto = decisao_texto)\n\nclean_acordaos &lt;- clean_acordaos |&gt;\n  # seleciona e renomeia as colunas de interesse\n  dplyr::select(id, uf = procedencia_geografica_uf_sigla, numero = processo_numero, data = julgamento_data, texto = ementa_texto, url = inteiro_teor_url)\n\n# Salva as tabelas limpas\nsaveRDS(clean_monocraticas, \"DATA/CLEAN/clean_monocraticas.rds\")\nsaveRDS(clean_acordaos, \"DATA/CLEAN/clean_acordaos.rds\")",
    "crumbs": [
      "Apêndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Código</span>"
    ]
  }
]