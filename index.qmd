---
title: "RELATORIO"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  cache = TRUE,
  fig.width = 8,
  fig.height = 5
)

library(ggplot2)
```


# Coleta dos dados

Os dados foram baixados do portal de estatística do STF. Foram baixados os processos, decisoes, legitimados e participação social. Os dados foram salvos em [DATA/RAW/](DATA/RAW/).

```{r}
# importar os dados
raw_processos <- readxl::read_xlsx("DATA/RAW/raw_processos.xlsx", na = "*NI*")
raw_decisoes <- readxl::read_xlsx("DATA/RAW/raw_decisoes.xlsx",
  na = "*NI*",
  col_types = c("guess", "date", "guess", "guess", "guess", "guess")
)
raw_legitimados <- readxl::read_xlsx("DATA/RAW/raw_legitimados.xlsx",
  na = "*NI*"
)
```

# Limpezas iniciais
## Tabela com os dados de processos

A primeira limpeza foi feita na tabela com os dados de processos, salva como [raw_processos.xlsx](DATA/RAW/raw_processos.xlsx).

```{r}
# limpa o nome das colunas
processos <- raw_processos |>
  janitor::clean_names()

# separa classe e número da coluna processo
processos <- processos |>
  tidyr::separate(
    processo,
    into = c("classe", "numero"),
    sep = " ",
    convert = TRUE
  )

# separa os assuntos relacionados em linhas diferentes
processos <- processos |>
  tidyr::separate_rows(
    assunto_relacionado,
    sep = "\\s*\\|\\s*"
  )

# separa a legislação em linhas diferentes
processos <- processos |>
  tidyr::separate_rows(
    legislacao,
    sep = "\\r"
  )

# organiza as colunas de datas
processos <- processos |>
  dplyr::mutate(
    data_autuacao = lubridate::ymd(as.Date(data_autuacao)),
    data_transito_julgado = lubridate::ymd(as.Date(data_transito_julgado))
  )

# salva a tabela limpa
saveRDS(processos, "DATA/CLEAN/clean_processos.rds")
```

## Tabela com os dados de decisões

A segunda limpeza foi feita na tabela com os dados de decisões, salva como [raw_decisoes.xlsx](DATA/RAW/raw_decisoes.xlsx).

```{r}
# limpa o nome das colunas
decisoes <- raw_decisoes |>
  janitor::clean_names()

# separa classe e número da coluna processo
decisoes <- decisoes |>
  tidyr::separate(
    processo,
    into = c("classe", "numero"),
    sep = " ",
    convert = TRUE
  )

# converte a coluna data para o formato de data, andamento e subgrupo em fator
decisoes <- decisoes |>
  dplyr::mutate(
    data = lubridate::ymd(as.Date(data)),
    andamento_agrupado = as.factor(andamento_agrupado),
    subgrupo = as.factor(subgrupo)
  )

# salva a tabela limpa
saveRDS(decisoes, "DATA/CLEAN/clean_decisoes.rds")
```

## Tabela com os dados de legitimados

A terceira limpeza foi feita na tabela com os dados de legitimados, salva como [raw_legitimados.xlsx](DATA/RAW/raw_legitimados.xlsx).

```{r}
# limpa o nome das colunas
legitimados <- raw_legitimados |>
  janitor::clean_names()

# separa classe e número da coluna processo
legitimados <- legitimados |>
  tidyr::separate(
    processo,
    into = c("classe", "numero"),
    sep = " ",
    convert = TRUE
  )

# salva a tabela limpa
saveRDS(legitimados, "DATA/CLEAN/clean_legitimados.rds")
```

```{r, include = FALSE}
# cria uma tabela mestre do recorte de pesquisa
recorte <- processos |>
  dplyr::filter(
    classe == "ADPF",
    lubridate::year(data_autuacao) >= 2014 & lubridate::year(data_autuacao) <= 2024
  ) |>
  dplyr::select(classe, numero, em_tramitacao) |>
  dplyr::distinct()
```


# Primeiras analises

* **Total de ações de controle concnetrado ajuizadas por ano**

```{r, echo = FALSE}
processo_ano_total <- processos |>
  dplyr::select(classe, numero, data_autuacao) |>
  dplyr::distinct() |>
  dplyr::group_by(
    ano = lubridate::year(data_autuacao)
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |> 
  dplyr::mutate(
    destaque = dplyr::if_else(ano >= 2014 & ano <= 2024, "Período Destacado", "Outros Anos")
  ) |>
  ggplot2::ggplot(aes(x = ano, y = total)) +
  geom_col(aes(fill = destaque)) +
  scale_x_continuous(breaks = seq(1988, 2025, 4)) +
  scale_y_continuous(expand = c(0,0), limits = c(0, 600)) +
  scale_fill_manual(
    values = c("Período Destacado" = "#C19298", "Outros Anos" = "#5B96A5"),
    guide = "none" # Remove a legenda
  ) +
  geom_smooth(color = "#90A5A8", se = FALSE) +
  labs(
    x = "Ano",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_ano_total

decJ::save_decJ("PLOT/processo_ano_total.png", processo_ano_total, l  = 24)
```

* **Os principais ramos do direito de controle concentrado ajuizados**

```{r, echo = FALSE}
processo_ramo <- processos |>
  dplyr::select(classe, numero, ramo_do_direito) |>
  dplyr::distinct() |>
  dplyr::group_by(
    ramo_do_direito
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  tidyr::drop_na() |>
  dplyr::arrange(dplyr::desc(total)) |>
  dplyr::slice_head(n = 10) |>
  ggplot2::ggplot(aes(x = reorder(ramo_do_direito, total), y = total)) +
  geom_col(fill = "#5B96A5") +
  coord_flip() +
  labs(
    x = "Ramo do Direito",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_ramo

decJ::save_decJ("PLOT/processo_ramo.png", processo_ramo, l = 24)
```


* **Os principais assuntos de controle concentrado ajuizados**

```{r, echo = FALSE}
processo_assunto <- processos |>
  dplyr::select(classe, numero, assunto_relacionado) |>
  dplyr::distinct() |>
  dplyr::group_by(
    assunto_relacionado
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  tidyr::drop_na() |>
  dplyr::arrange(dplyr::desc(total)) |>
  dplyr::slice_head(n = 10) |>
  ggplot2::ggplot(aes(x = reorder(assunto_relacionado, total), y = total)) +
  geom_col(fill = "#5B96A5") +
  coord_flip() +
  labs(
    x = "Assunto Relacionado",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_assunto

decJ::save_decJ("PLOT/processo_assunto.png", processo_assunto, l = 24)
```


* **Relação de processos já encerrados ou não por ano que foi ajuizado**

```{r, echo = FALSE}
processo_encerrado_ano <- processos |>
  dplyr::select(classe, numero, data_autuacao, em_tramitacao) |>
  dplyr::distinct() |>
  dplyr::mutate(
    ano = lubridate::year(data_autuacao)
  ) |>
  dplyr::group_by(ano, em_tramitacao) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  ggplot2::ggplot(aes(x = ano, y = total, fill = em_tramitacao)) +
  geom_col(position = "stack") +
  scale_x_continuous(breaks = seq(1988, 2025, 4)) +
  scale_y_continuous(expand = c(0,0), limits = c(0, 600)) +
  scale_fill_manual(
    values = c("Não" = "#C19298", "Sim" = "#5B96A5"),
    name = "Encerrado",
    labels = c("Não" = "Encerrados", "Sim" = "Não Encerrados")
  ) +
  labs(
    x = "Ano",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_encerrado_ano

decJ::save_decJ("PLOT/processo_encerrado_ano.png", processo_encerrado_ano, l = 24)
```

* **Tempo médio para baixa da ação com ou sem rito art. 12**

```{r, echo = FALSE}
processo_tempo_baixa <- processos |>
  dplyr::select(classe, numero, data_autuacao, data_baixa, tem_rito_art_12) |>
  dplyr::distinct() |>
  dplyr::mutate(data_baixa = as.Date(data_baixa, tryFormats = "%d/%m/%Y") |> lubridate::ymd()) |>
  dplyr::mutate(tempo = lubridate::interval(data_autuacao, data_baixa) / lubridate::dyears(1)) |>
  dplyr::mutate(tempo = round(tempo, 1))

processo_tempo_baixa |>
  dplyr::group_by(tem_rito_art_12) |>
  dplyr::summarise(
    tempo_medio = mean(tempo, na.rm = TRUE)
  )
```

* **Sobrevivência das ações de controle concentrado**

```{r, echo = FALSE}
library(survival)
library(survminer)

processo_sobrevivencia <- processos |>
  dplyr::select(classe, numero, data_autuacao, data_baixa, tem_rito_art_12) |>
  dplyr::distinct() |>
  dplyr::mutate(data_baixa = as.Date(data_baixa, tryFormats = "%d/%m/%Y") |> lubridate::ymd()) |>
  dplyr::mutate(
    evento = ifelse(!is.na(data_baixa), 1, 0)
  ) |>
  tidyr::replace_na(list(data_baixa = lubridate::today())) |>
  dplyr::mutate(
    tempo = lubridate::interval(data_autuacao, data_baixa) / lubridate::ddays(1))

processo_sobrevivencia$tem_rito_art_12 <- as.factor(processo_sobrevivencia$tem_rito_art_12)

ajuste_km <- survfit(Surv(tempo, evento) ~ 1, data = processo_sobrevivencia)

print(ajuste_km)

surv_1 <- ggsurvplot(
  ajuste_km,
  data = processo_sobrevivencia,
  pval = TRUE,               
  conf.int = TRUE,             
  risk.table = TRUE,           
  xlab = "Tempo (dias)",
  ylab = "Probabilidade de Sobrevivência",
  color = "#5B96A5",
  ggtheme = decJ::theme_decJ()
)

decJ::save_decJ("PLOT/ajuste_km.png", surv_1$plot, l = 24)
decJ::save_decJ("PLOT/ajuste_km_risk_table.png", surv_1$table, l = 24, a = 8)
```

```{r, echo = FALSE}
modelo_cox <- coxph(Surv(tempo, evento) ~ 1, data = processo_sobrevivencia)

summary(modelo_cox)
```

Os dados demonstraram que o rito do art. 12 é um predito estatisticamente significativo (p < 0.05) para a ocorrência do evneto. Especificamente, os processos que seguem o rito do art . 12, tê um risco 47,14% maior de sofrer o evento em qualquer ponto no tempo, em comparção com os processos que não seguem esse rito.

Hipótese nula: a variável não tem efeito sobre a sobrevivência
Hipítese alternativa: a variável tem efeito sobre a sobrevivência

No entanto, essa análise é exploratório não preditiva, dado que o modelo tem capacidade preditiva geral muito baixa (concordância = 0.0511). Indicando que outros fatores influenciam no tempo para a conclusão da ação.

```{r}
teste_cox <- cox.zph(modelo_cox)
teste_cox

ggcoxzph(teste_cox)
```

```{r}
teste_logrank <- survdiff(Surv(tempo, evento) ~ tem_rito_art_12, data = processo_sobrevivencia)
teste_logrank
```

# Replicando as análises com apenas ADPF

* **Total de ações de controle concnetrado ajuizadas por ano**

```{r, echo = FALSE}
processos_adpf <- processos |> dplyr::filter(classe == "ADPF")

processo_ano_total <- processos_adpf |>
  dplyr::select(classe, numero, data_autuacao) |>
  dplyr::distinct() |>
  dplyr::group_by(
    ano = lubridate::year(data_autuacao)
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |> 
  dplyr::mutate(
    destaque = dplyr::if_else(ano >= 2014 & ano <= 2024, "Período Destacado", "Outros Anos")
  ) |>
  ggplot2::ggplot(aes(x = ano, y = total)) +
  geom_col(aes(fill = destaque)) +
  scale_x_continuous(breaks = seq(1988, 2025, 4)) +
  scale_y_continuous(expand = c(0,0), limits = c(0, 200)) +
  scale_fill_manual(
    values = c("Período Destacado" = "#C19298", "Outros Anos" = "#5B96A5"),
    guide = "none" # Remove a legenda
  ) +
  geom_smooth(color = "#90A5A8", se = FALSE) +
  labs(
    x = "Ano",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_ano_total

decJ::save_decJ("PLOT/processo_ano_total_adpf.png", processo_ano_total, l  = 24)
```

* **Os principais ramos do direito de controle concentrado ajuizados**

```{r, echo = FALSE}
processo_ramo <- processos_adpf |>
  dplyr::select(classe, numero, ramo_do_direito) |>
  dplyr::distinct() |>
  dplyr::group_by(
    ramo_do_direito
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  tidyr::drop_na() |>
  dplyr::arrange(dplyr::desc(total)) |>
  dplyr::slice_head(n = 10) |>
  ggplot2::ggplot(aes(x = reorder(ramo_do_direito, total), y = total)) +
  geom_col(fill = "#5B96A5") +
  coord_flip() +
  labs(
    x = "Ramo do Direito",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_ramo

decJ::save_decJ("PLOT/processo_ramo_adpf.png", processo_ramo, l = 24)
```


* **Os principais assuntos de controle concentrado ajuizados**

```{r, echo = FALSE}
processo_assunto <- processos_adpf |>
  dplyr::select(classe, numero, assunto_relacionado) |>
  dplyr::distinct() |>
  dplyr::group_by(
    assunto_relacionado
  ) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  tidyr::drop_na() |>
  dplyr::arrange(dplyr::desc(total)) |>
  dplyr::slice_head(n = 10) |>
  ggplot2::ggplot(aes(x = reorder(assunto_relacionado, total), y = total)) +
  geom_col(fill = "#5B96A5") +
  coord_flip() +
  labs(
    x = "Assunto Relacionado",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_assunto

decJ::save_decJ("PLOT/processo_assunto_adpf.png", processo_assunto, l = 24)
```


* **Relação de processos já encerrados ou não por ano que foi ajuizado**

```{r, echo = FALSE}
processo_encerrado_ano <- processos_adpf |>
  dplyr::select(classe, numero, data_autuacao, em_tramitacao) |>
  dplyr::distinct() |>
  dplyr::mutate(
    ano = lubridate::year(data_autuacao)
  ) |>
  dplyr::group_by(ano, em_tramitacao) |>
  dplyr::summarise(
    total = dplyr::n()
  ) |>
  ggplot2::ggplot(aes(x = ano, y = total, fill = em_tramitacao)) +
  geom_col(position = "stack") +
  scale_x_continuous(breaks = seq(1988, 2025, 4)) +
  scale_y_continuous(expand = c(0,0), limits = c(0, 200)) +
  scale_fill_manual(
    values = c("Não" = "#C19298", "Sim" = "#5B96A5"),
    name = "Encerrado",
    labels = c("Não" = "Encerrados", "Sim" = "Não Encerrados")
  ) +
  labs(
    x = "Ano",
    y = "Número de processos"
  ) +
  decJ::theme_decJ(y_num = TRUE)

processo_encerrado_ano

decJ::save_decJ("PLOT/processo_encerrado_ano_adpf.png", processo_encerrado_ano, l = 24)
```

* **Tempo médio para baixa da ação com ou sem rito art. 12**

```{r, echo = FALSE}
processo_tempo_baixa <- processos_adpf |>
  dplyr::select(classe, numero, data_autuacao, data_baixa, tem_rito_art_12) |>
  dplyr::distinct() |>
  dplyr::mutate(data_baixa = as.Date(data_baixa, tryFormats = "%d/%m/%Y") |> lubridate::ymd()) |>
  dplyr::mutate(tempo = lubridate::interval(data_autuacao, data_baixa) / lubridate::dyears(1)) |>
  dplyr::mutate(tempo = round(tempo, 1))

processo_tempo_baixa |>
  dplyr::group_by(tem_rito_art_12) |>
  dplyr::summarise(
    tempo_medio = mean(tempo, na.rm = TRUE)
  )
```

* **Sobrevivência das ações de controle concentrado**

```{r, echo = FALSE}
library(survival)
library(survminer)

processo_sobrevivencia <- processos_adpf |>
  dplyr::select(classe, numero, data_autuacao, data_baixa, tem_rito_art_12) |>
  dplyr::distinct() |>
  dplyr::mutate(data_baixa = as.Date(data_baixa, tryFormats = "%d/%m/%Y") |> lubridate::ymd()) |>
  dplyr::mutate(
    evento = ifelse(!is.na(data_baixa), 1, 0)
  ) |>
  dplyr::mutate(
    tempo = lubridate::interval(data_autuacao, data_baixa) / lubridate::ddays(1))

processo_sobrevivencia$tem_rito_art_12 <- as.factor(processo_sobrevivencia$tem_rito_art_12)

ajuste_km <- survfit(Surv(tempo, evento) ~ tem_rito_art_12, data = processo_sobrevivencia)

print(ajuste_km)

ggsurvplot(
  ajuste_km,
  data = processo_sobrevivencia,
  pval = TRUE,               
  conf.int = TRUE,             
  risk.table = TRUE,           
  legend.title = "Rito Art. 12",
  legend.labs = c("Não", "Sim"), 
  xlab = "Tempo (dias)",
  ylab = "Probabilidade de Sobrevivência (Processo Ativo)",
  title = "Curva de Sobrevivência de Processos por Rito",
  ggtheme = decJ::theme_decJ()
)
```

```{r, echo = FALSE}
modelo_cox <- coxph(Surv(tempo, evento) ~ tem_rito_art_12, data = processo_sobrevivencia)

summary(modelo_cox)
```

Os dados demonstraram que o rito do art. 12 não é um preditor estatisticamente significativo (p < 0.05) para a ocorrência do evneto. Especificamente, os processos que seguem o rito do art . 12, não necessariamente tem um risco maior de sofrer o evento em qualquer ponto no tempo, em comparção com os processos que não seguem esse rito.

Hipótese nula: a variável não tem efeito sobre a sobrevivência
Hipítese alternativa: a variável tem efeito sobre a sobrevivência

No entanto, essa análise é exploratório não preditiva, dado que o modelo tem capacidade preditiva geral muito baixa (concordância = 0.527). Indicando que outros fatores influenciam no tempo para a conclusão da ação.

```{r}
teste_cox <- cox.zph(modelo_cox)
teste_cox

ggcoxzph(teste_cox)
```

```{r}
teste_logrank <- survdiff(Surv(tempo, evento) ~ tem_rito_art_12, data = processo_sobrevivencia)
teste_logrank
```

* **Explicando a diferença:**

```{r}
processo_sobrevivencia <- processos |>
  dplyr::select(classe, numero, data_autuacao, data_baixa, tem_rito_art_12) |>
  dplyr::distinct() |>
  dplyr::mutate(data_baixa = as.Date(data_baixa, tryFormats = "%d/%m/%Y") |> lubridate::ymd()) |>
  dplyr::mutate(
    evento = ifelse(!is.na(data_baixa), 1, 0)
  ) |>
  dplyr::mutate(
    tempo = lubridate::interval(data_autuacao, data_baixa) / lubridate::ddays(1))

processo_sobrevivencia$tem_rito_art_12 <- as.factor(processo_sobrevivencia$tem_rito_art_12)

modelo_estratificado <- coxph(Surv(tempo, evento) ~ tem_rito_art_12 + strata(classe), data = processo_sobrevivencia)

summary(modelo_estratificado)
```

Não é a classe que influencia o tempo de resposta com base no rito 12, ja que o modelo estratificado com base na classe reforçou o modelo geral.

# ADPF legitimados

```{r}
processos_adpf_recorte <- processos_adpf |>
  dplyr::filter(lubridate::year(data_autuacao) >= 2014 & lubridate::year(data_autuacao) <= 2024)

adpf_legitimados <- legitimados |>
  dplyr::filter(classe == "ADPF", numero %in% processos_adpf_recorte$numero)

adpf_tratado_leg <- adpf_legitimados |>
  dplyr::mutate(
    ativo = ifelse(legitimado_polo_ativo |> stringr::str_split_i("\\s+\\-\\s+", 1) |>
                     stringr::str_length() >=legitimado_polo_ativo |> stringr::str_split_i("\\s+\\-\\s+", -1) |>
                     stringr::str_length(), legitimado_polo_ativo |> stringr::str_split_i("\\s+\\-\\s+", 1), legitimado_polo_ativo |> stringr::str_split_i("\\s+\\-\\s+", -1))
    ) |>
  dplyr::mutate(
    passivo = ifelse(legitimado_polo_passivo |> stringr::str_split_i("\\s+\\-\\s+", 1) |>
                     stringr::str_length() >=legitimado_polo_passivo |> stringr::str_split_i("\\s+\\-\\s+", -1) |>
                     stringr::str_length(), legitimado_polo_passivo |> stringr::str_split_i("\\s+\\-\\s+", 1), legitimado_polo_passivo |> stringr::str_split_i("\\s+\\-\\s+", -1))
  ) |>
  dplyr::select(-legitimado_polo_ativo, -legitimado_polo_passivo) |>
  dplyr::mutate(
    ativo = decJ::utilitario_remover_acentos(ativo),
    passivo = decJ::utilitario_remover_acentos(passivo)
  )
```

# ADPF decisoes

```{r, echo = FALSE}
recorte_dec <- recorte |> dplyr::filter(em_tramitacao == "Não")

decisoes <- decisoes |> dplyr::filter(
  classe == "ADPF",
  numero %in% recorte_dec$numero
)

decisao_final <- decisoes |>
  dplyr::filter(
    descricao == "Improcedente" | descricao == "Procedente" | descricao == "Procedente em parte"
  )
```

* **Tipo de decisão final com mérito**

```{r, echo = FALSE}
decisao_final |>
  dplyr::group_by(descricao) |>
  dplyr::summarise(n = dplyr::n()) |>
  ggplot() +
  geom_col(aes(x = n, y = reorder(descricao, n)), fill = "#5B96A5") +
  scale_x_continuous(expand = c(0,0), limits = c(0, 130)) +
  labs(
    x = "Número de Processos",
    y = "Resultado"
  ) +
  decJ::theme_decJ(x_num = TRUE)
```

* **Comparação entre mérito e sem mérito + tipo de decisão com mérito**

```{r, echo = FALSE}
decisao_tipos <- decisoes |>
  dplyr::select(classe, numero, descricao, data) |>
  dplyr::mutate(
    merito = dplyr::case_when(
      descricao == "Improcedente" ~ "Sim",
      descricao == "Procedente" ~ "Sim",
      descricao == "Procedente em parte" ~ "Sim",
      TRUE ~ "Não"
    ),
    descricao = dplyr::case_when(
      descricao == "Improcedente" ~ "Improcedente",
      descricao == "Procedente" ~ "Procedente",
      descricao == "Procedente em parte" ~ "Procedente em parte",
      TRUE ~ "Sem mérito"
    )
  ) |>
  dplyr::group_by(numero) |>
  dplyr::arrange(data) |>
  dplyr::slice_max(order_by = data, n = 1)

decisao_tipos <- dplyr::anti_join(decisao_tipos, decisao_final, by = 'numero') |> dplyr::bind_rows(decisao_final) |> tidyr::replace_na(list(merito = "Sim")) |> dplyr::distinct()
```

